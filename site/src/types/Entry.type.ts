export interface IEntry {
  // Id of this item, will be set by the service
  // not directly stored
  id: string;

  // The question
  question: string;

  // The answer to the question
  answer: string;

  // Additional context, used when we are going to generate
  // other questions based on this on
  context: string;

  // Source question, used to auto-derive this.
  // i.e. this id was fed to the ai to generate this
  // question + answer pair.
  // this is null for questions that are generated by
  // humans.
  generated_by: string | null;

  // Users that have rated this item, mainly used to track
  // who has already voted for things.
  // This will be stored as a JSON blob.
  // We don't expect a crazy number of users, so this is fine for now.
  users: Map<string, number>;

  // Who created the entry, display name
  created_by: string;

  // Actual uid of the creater
  created_by_uid: string;

  // The calculated rating, avg of the users map.
  // Note: not stored in database..
  rating: number
}

export const emptyEntry: IEntry = {
  id: "",
  question: "",
  answer: "",
  context: "",
  generated_by: null,
  users: new Map<string, number>(),
  created_by: "",
  created_by_uid: "",
  rating: 0,
};
